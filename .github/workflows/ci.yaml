name: Build and Publish Package

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache Yarn
        uses: actions/cache@v4
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Clean and install dependencies
        run: |
          yarn cache clean
          yarn install

      - name: Build
        run: yarn build:production

      - name: Get main and base version
        id: basemain
        shell: bash
        run: |
          baseVersion=$(cat VERSION)
          mainVersion=$(echo ${baseVersion} | cut -d '.' -f 1)
          echo "baseVersion=${baseVersion}" >> $GITHUB_OUTPUT
          echo "mainVersion=${mainVersion}" >> $GITHUB_OUTPUT

      - name: Generate new version
        id: newVer
        shell: bash
        run: |
          git fetch --tags origin
          currentVersion=$(git tag --list --sort=-version:refname "${baseVersion}.*" | head -n 1 || "${baseVersion}.0")

          if [ -z "${currentVersion}" ]; then
            newVersion="${baseVersion}.0"
          else
            runningNumber=$(echo ${currentVersion} | cut -f 3 -d '.')
            newVersion="${baseVersion}.$((${runningNumber} + 1))"
          fi
          echo "The generated new version is: ${newVersion}"
          echo "newVersion=${newVersion}" >> $GITHUB_OUTPUT
        env:
          baseVersion: ${{ steps.basemain.outputs.baseVersion }}

      - name: Set version from tag
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: |
          echo "Setting version from tag: ${newVersion}"
          yarn version --new-version ${newVersion} --no-git-tag-version
        env:
          newVersion: ${{ steps.newVer.outputs.newVersion }}

      - name: Publish to GitHub Packages
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: |
          echo "registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.TAG_CREATION_TOKEN }}" >> .npmrc
          echo "@vempain:registry=https://npm.pkg.github.com" >> .npmrc
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.TAG_CREATION_TOKEN }}

      - name: Create tag
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TAG_CREATION_TOKEN }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.newVer.outputs.newVersion }}',
              sha: context.sha
            })
